install.packages("ggplot2")
library(ggplot2)
install.packages("rvest")
library(rvest)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
library(curl)
library(rvest)
install.packages("rvest")
library(rvest)
getOption("repos")
update.packages(oldPkgs = c("bookdown", "rmarkdown"))
install.packages("rvest")
install.packages("rvest")
library(rvest)
library(rvest) # knihovna pro parsing webu
library(stringr) # knihovna pro práce z string
library(reshape2) # knihovna pro transformace dlouhý/široký formát
#library(dplyr)
library(plyr) # knihovna pro spojení data.frame
setwd('/home/pinguin/Documents/Unicorn2020/Analyza dat - semestralka1/Analyza_dat/ukol6Data')
# nastavím základní cesty
url <- 'http://www.obcepro.cz/obce'
base_url <- 'http://www.obcepro.cz'
# parsovani webu
source <- read_html(url)
# dostávám počet stránek paginace a odkaz pro jednotlivou stránku
pagination_last_href <- html_attr(html_nodes(source, "ul.pagination>li.last>a"),name="href") # získání cesty posledního odkazu strankovače
max_count <- as.numeric(strsplit(pagination_last_href, "=")[[1]][2]) # získání čísla poslední stránky strankovače
pagination_href <- strsplit(pagination_last_href, "=")[[1]][1] # odkaz na stránku strankovače bez čísla stránky
for(i in 1:max_count){ #max_count # projdu cyklusem všichni stránky stránkování
pagin_page <-read_html(paste0(base_url, pagination_href, '=', i)) # parsovani jednotlivé stránky obce/prehled?page
obce <- html_nodes(pagin_page, "table.table.table-striped.table-condesed.support>tbody>tr") # získání řádků z tabulky obcí
lapply(obce, function(obec) { # pomocí lapply procházím jednotlivé řádky (obcí)
#print(obec %>% html_text())
obec_name <- obec %>% html_nodes('td>a') %>% html_text() # získám název obce v string (první buňka, text odkazu)
kraj_name <- obec %>% html_nodes('td>p') %>% html_text() # získám název kraje v string (první buňka, text odstavce)
okres_name <- obec %>% html_nodes('td:nth-child(3)') %>% html_text() # získám název okresu v string (třetí buňka, text v td)
orp <- obec %>% html_nodes('td:nth-child(2)') %>% html_text() # získám orp v string (druhá buňka, text v td)
#print(c(obec_name, kraj_name, okres_name, opr))
odkaz <- obec %>% html_nodes('td>a') # získám odkaz jednotlivého obce
obec_detail <- read_html(paste0(base_url, html_attr(odkaz, name="href"))) # zparsuju si stránku obce. Pokud to neklikám v prohlížeči, dostávám to na stránce, není v modal okně
all_years <- html_nodes(obec_detail, "div.tab-content>.tab-pane") # vytáhnu z toho blok z tabulkama bez seznamu let
lapply(all_years, function(year) { # projdu pomocí lapply všichni roky tohoto obce
id <- year %>% html_attr(name = "id") # vytáhnu attribut id u div. Div je první child all_years, a jeho sourozence jsou bloky z tabulkama jednotlivých let. Id je v formátu xx0000
yearn <- gsub("[^0-9.-]", "", id) # získám rok pomocí gsub a regularky pouze pro čísla
# pro každý rok potřebuji 1 data.frame. Zkontroluji existování, pokud není, založím
if(!exists(paste("obci", yearn, sep = "_"))){
assign(paste("obci", yearn, sep="_"), data.frame(), envir = .GlobalEnv) # pro definice názvu prom. z konkatenace roku, využiji assign, a dám to do globálního env
}
table <- year %>% html_nodes("table")  %>% html_table(fill=TRUE) # získám tabulku se statistikami za 1 rok v 1 obcí
my_df <- as.data.frame(table[[1]]) # převedu do data.frame
my_df$obce = obec_name # přidám název obce
my_df <- dcast(my_df, obce ~ Popis, value.var = "Hodnota") # převedu data.frame do širokého formátu
my_df$kraj <- kraj_name # přidám název kraje
my_df$orp <- orp # přidám orp
my_df$okres <- okres_name # přidám název okresu
assign(paste("obci", yearn, sep="_"), join(eval(parse(text = paste("obci", yearn, sep="_"))), my_df, type = "full"), envir = .GlobalEnv) # přidám do data.frame roku jednotlivý obec. Join type=full může spojit df s různým počtem sloupců a označit chybějící hodnoty NA
})
})
}
# nastavím základní cesty
url <- 'http://www.obcepro.cz/obce'
base_url <- 'http://www.obcepro.cz'
# parsovani webu
source <- read_html(url)
# dostávám počet stránek paginace a odkaz pro jednotlivou stránku
pagination_last_href <- html_attr(html_nodes(source, "ul.pagination>li.last>a"),name="href") # získání cesty posledního odkazu strankovače
max_count <- as.numeric(strsplit(pagination_last_href, "=")[[1]][2]) # získání čísla poslední stránky strankovače
pagination_href <- strsplit(pagination_last_href, "=")[[1]][1] # odkaz na stránku strankovače bez čísla stránky
for(i in 1:max_count){ #max_count # projdu cyklusem všichni stránky stránkování
print(i)
pagin_page <-read_html(paste0(base_url, pagination_href, '=', i)) # parsovani jednotlivé stránky obce/prehled?page
obce <- html_nodes(pagin_page, "table.table.table-striped.table-condesed.support>tbody>tr") # získání řádků z tabulky obcí
lapply(obce, function(obec) { # pomocí lapply procházím jednotlivé řádky (obcí)
#print(obec %>% html_text())
obec_name <- obec %>% html_nodes('td>a') %>% html_text() # získám název obce v string (první buňka, text odkazu)
kraj_name <- obec %>% html_nodes('td>p') %>% html_text() # získám název kraje v string (první buňka, text odstavce)
okres_name <- obec %>% html_nodes('td:nth-child(3)') %>% html_text() # získám název okresu v string (třetí buňka, text v td)
orp <- obec %>% html_nodes('td:nth-child(2)') %>% html_text() # získám orp v string (druhá buňka, text v td)
#print(c(obec_name, kraj_name, okres_name, opr))
odkaz <- obec %>% html_nodes('td>a') # získám odkaz jednotlivého obce
obec_detail <- read_html(paste0(base_url, html_attr(odkaz, name="href"))) # zparsuju si stránku obce. Pokud to neklikám v prohlížeči, dostávám to na stránce, není v modal okně
all_years <- html_nodes(obec_detail, "div.tab-content>.tab-pane") # vytáhnu z toho blok z tabulkama bez seznamu let
lapply(all_years, function(year) { # projdu pomocí lapply všichni roky tohoto obce
id <- year %>% html_attr(name = "id") # vytáhnu attribut id u div. Div je první child all_years, a jeho sourozence jsou bloky z tabulkama jednotlivých let. Id je v formátu xx0000
yearn <- gsub("[^0-9.-]", "", id) # získám rok pomocí gsub a regularky pouze pro čísla
# pro každý rok potřebuji 1 data.frame. Zkontroluji existování, pokud není, založím
if(!exists(paste("obci", yearn, sep = "_"))){
assign(paste("obci", yearn, sep="_"), data.frame(), envir = .GlobalEnv) # pro definice názvu prom. z konkatenace roku, využiji assign, a dám to do globálního env
}
table <- year %>% html_nodes("table")  %>% html_table(fill=TRUE) # získám tabulku se statistikami za 1 rok v 1 obcí
my_df <- as.data.frame(table[[1]]) # převedu do data.frame
my_df$obce = obec_name # přidám název obce
my_df <- dcast(my_df, obce ~ Popis, value.var = "Hodnota") # převedu data.frame do širokého formátu
my_df$kraj <- kraj_name # přidám název kraje
my_df$orp <- orp # přidám orp
my_df$okres <- okres_name # přidám název okresu
assign(paste("obci", yearn, sep="_"), join(eval(parse(text = paste("obci", yearn, sep="_"))), my_df, type = "full"), envir = .GlobalEnv) # přidám do data.frame roku jednotlivý obec. Join type=full může spojit df s různým počtem sloupců a označit chybějící hodnoty NA
})
})
}
for(var in ls()){
if(str_detect(var, '^obci_')){
#print(i)
write.csv(eval(parse(text=var)), file=paste0(var, ".csv"), row.names = F)
}
}
